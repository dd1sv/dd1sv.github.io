{"version":3,"sources":["StartPage/StartTopMenu.js","StartPage/StartCards.js","FirstPage.js","PreparationPage/PreparationPage.js","SecondPage/menu.js","SecondPage/SecondPage.js","ProgramPage/ProgramPage.js","ProgramPage/helpers.js","SecondPage/VK.js","SecondPage/OK.js","SecondPage/Facebook.js","SecondPage/Instagram.js","SecondPage/TikTok.js","SecondPage/Twitter.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","fontSize","breakpoints","up","StartTopMenu","classes","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","className","AppBar","position","style","backgroundColor","Toolbar","Typography","variant","noWrap","IconButton","color","Badge","root","maxWidth","StartCards","props","Card","to","url","textDecoration","CardActionArea","CardMedia","component","alt","height","image","imgUrl","CardContent","gutterBottom","name","description","paper","padding","textAlign","palette","text","secondary","cards","alignItems","alignContent","justifyContent","margin","flexWrap","card","FirstPage","width","button","marginTop","actionsContainer","marginBottom","resetContainer","img","float","icon","getStepContent","step","getStepIMG","src","PreparationPage","React","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","map","label","index","Step","StepLabel","StepIconProps","active","completed","StepContent","Button","disabled","onClick","length","Paper","square","elevation","drawerWidth","appBar","drawer","flexShrink","drawerPaper","toolbar","mixins","content","background","default","link","CssBaseline","Drawer","anchor","ListItem","ListItemIcon","ListItemText","primary","Divider","List","PermanentDrawerRight","paragraph","Box","fontFamily","href","ProgramPage","defaultTranslate","x","y","translate","setTranslate","containerRef","useCallback","containerElem","getBoundingClientRect","useCenteredTree","fontWeight","marginLeft","data","orgChartJson","zoom","TabPanel","children","value","other","role","hidden","aria-labelledby","p","a11yProps","tabs","borderRight","divider","textCenter","VK","setValue","Tabs","onChange","event","newValue","aria-label","Tab","maxHeight","OK","Facebook","size","window","location","Instagram","TikTok","Twitter","App","exact","path","render","SecondPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e4678cd.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport Menu from '@material-ui/core/Menu';\nimport MailIcon from '@material-ui/icons/Mail';\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'block',\n    fontSize: '10px',\n    [theme.breakpoints.up('sm')]: {\n        fontSize: '14px',\n      },\n  },  \n  \n  \n  \n  \n}));\n\nfunction StartTopMenu() {\n  const classes = useStyles();\n \n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      \n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      \n    >\n     \n    </Menu>\n  );\n\n  \n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\"\n      style={{backgroundColor: '#1976d2'}}>\n        <Toolbar>\n\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <b>Информационно-справочная система </b>\n            <br/>по поиску информации о человеке в социальных сетях\n          </Typography>\n               \n         \n          <div className={classes.grow} />\n         \n            <IconButton color=\"inherit\">\n              <Badge color=\"secondary\">\n                <MailIcon />\n              </Badge>\n              <Typography>\n                  Обратная связь\n              </Typography>\n            </IconButton>\n            \n        </Toolbar>\n      </AppBar>\n      \n      {renderMenu}\n    </div>\n  );\n}\n\nexport default StartTopMenu;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nfunction StartCards(props) {\n  const classes = useStyles();\n  \n  return (\n  \n    <Card className={classes.root}>\n      <Link key={1} to ={props.url} style={{textDecoration: 'none', color: 'black' }}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image={props.imgUrl}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.name}\n          </Typography>\n          <Typography variant=\"body3\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      \n      </Link>\n    </Card>\n    \n  );\n}\nexport default StartCards;\n","import { StartCards} from './StartPage';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {HashRouter as Router} from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  cards: {\n  //  marginTop: '5%',\n  //  display: 'flex',\n  //  justifyContent: 'center',\n   maxWidth: '1300px',\n   display: 'flex',\n   alignItems: 'center',\n   alignContent: 'center',\n   justifyContent: 'space-between',\n   margin: '3% auto',\n   flexWrap: 'wrap',\n  },\n  card: {\n    margin: '0 15px 10px 15px'\n  }\n}));\n\nfunction FirstPage() {\n  const classes = useStyles();\n  return (\n    <>\n    <div className={classes.cards}>\n    <Router>\n    {/* <Grid container spacing={1}> */}\n    <div className={classes.card}>\n    <StartCards imgUrl={'img/2.webp'} name={'Наставления перед проведением сбора информации в социальных сетях'} url={'/preparation'} description={'Обязательно к изучениею, перед первым этапом поиска и сбора информации о человеке в социальных сетях'}/>\n    </div>\n    <div className={classes.card}>\n    <StartCards imgUrl={'img/1.png'} name={'Реализация поиска информации о человеке в социальных сетях'} url={'/search-page'} description={'Описаны подходы и методика к изучению профилей и их поиску в социальных сетях'}/>\n    </div>\n    <div className={classes.card}>\n    <StartCards imgUrl={'img/3.png'} name={'Программы и сервисов для поиса, сбора и хранения информации в социальных сетях'} url={'/program-pages'} description={'Дерево связей с названиями и URL-адресами'}/>\n    </div>\n    \n    {/* </Grid> */}\n    \n</Router>\n    </div>\n    </>\n  );\n}\n\nexport default FirstPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    \n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    // style={{backgroundColor: '#1976d2'}}\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  text: {\n    width: '70%',\n    \n  },\n  img: {\n    float: 'right',\n    width: '100%',\n  },\n  icon: {\n    color: \"#1976d2 !important\"\n  },\n}));\n\n\n\nfunction getSteps() {\n  return ['Подготовка физического рабочего места', 'Подготовка виртуального рабочего места', 'Регистрация и аутентификацией в социальных сетях и сервисах'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `Рабочее место представляет персональный компьютер, в том числе и ноутбук на любой операционной системе, также\n              без строго ограничения по техническим характеристикам. Помимо этого необходим смартфон для реализации ряда функций и возможностей`;\n    case 1:\n      return 'Основной инструмент для поиска информации в социальных сетях является бразуер, рекомендуется использовать на движке Blink (chrome, chromium, vivaldi, opera) или Quantum (Firefox), в связи с большим колличеством расширений и плагинов. Для конфиденциальности рекомендуется - \"Privacy Badger\" и \"Ublock Origin\", для просмотра архивной версии страницы - Go Back in Time, для использования мобильных версий сервисов - \"User-Agent Switcher\", метаданные фотографий - \"Exif Viewer\", для скачивания видео - \"Flash Video Downloader\", создание скриншотов сайтов - \"Nimbus\"';\n\n    case 2:\n      return `Большинство социальных сетей и сервисов требуют авторизовация для их использования с помощью email-почты и/или мобильного телефонаю. Для собственной защиты и конфиденциальности, рекомендуется производить регистрацию в социальных сетях с помощью виртуальных SIM-карт и почт, зарегестрированных именно для нужд исследования. Почтовый сервис может использоваться любой, но обязательно не личный. Виртуальную SIM-карту можно получить в следующих сервисах: sms-activate, onlinesim, sms-acktiwator. Социальные сети регистрируется под вымышленным профилем, для того чтобы использовать активный OSINT или отвода подозрений`;\n    default:\n      return 'Ошибка';\n  }\n}\nfunction getStepIMG(step) {\n  switch (step) {\n    case 0:\n      return (<img src='img/img1.png'></img>)\n    case 1:\n      return (<img src='img/img2.png'></img>)\n\n    case 2:\n      return (<img src='img/img3.png'></img>)\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function PreparationPage() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel color=\"primary\" StepIconProps={{\n                                      classes: {active: classes.icon,\n                                        completed: classes.icon}}}>\n                                        {label}\n                                        </StepLabel>\n            <StepContent>\n              <Typography className={classes.text}>{getStepContent(index)}</Typography>\n              <Typography className={classes.img}>{getStepIMG(index)}</Typography>\n              <div className={classes.actionsContainer} >\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                   \n                  >\n                   Назад\n                  </Button>\n                  <Button\n                   style={{backgroundColor: '#1976d2'}}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Закончить' : 'Далее'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>Все шаги выполнены, перейдите к просмотру сервисов для поиска или способами поиска в социальных сетях</Typography>\n          <Link to='/'>\n          <Button className={classes.button}>\n            Вернуться на главную страницу\n          </Button>\n          </Link>\n        </Paper>\n      )}\n    </div>\n  );\n}\n\n// onClick={handleReset}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Link } from 'react-router-dom';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(0% - ${drawerWidth}px)`,\n    marginRight: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  link: {\n    color: 'black',\n    textDecoration: 'none!important',\n    \n  },\n \n  \n}));\n\nexport default function Menu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n     \n      \n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"right\"\n      >\n        <div className={classes.toolbar} />\n        <Link to='/' className={classes.link} >\n            <ListItem ListItem button key={'Вернуться в главное меню'}>\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText  primary={'Главное меню'} />\n            </ListItem>\n            </Link>\n        <Divider />\n        <Divider />\n        <Divider/>\n        <List>\n          <Link to='/search-page/vk' className={classes.link}>\n            <ListItem ListItem button key={'vk'}>\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={'Вконакте'} />\n            </ListItem>\n            </Link>\n\n            <Link to='/search-page/ok'className={classes.link}>\n            <ListItem ListItem button key={'ok'} >\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={'Одноклассники'} />\n            </ListItem>\n            </Link>\n            <Link to='/search-page/Facebook' className={classes.link}>\n            <ListItem ListItem button key={'Facebook'}>\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={'Facebook'} />\n            </ListItem>\n            </Link>\n            <Link to='/search-page/Instagram' className={classes.link}>\n            <ListItem ListItem button key={'Instagram'}>\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={'Instagram'} />\n            </ListItem>\n            </Link>\n            <Link to='/search-page/Twitter' className={classes.link}>\n            <ListItem ListItem button key={'Twitter'}>\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={'Twitter'} />\n            </ListItem>\n            </Link>\n            <Link to='/search-page/TikTok' className={classes.link}>\n            <ListItem ListItem button key={'TikTok'}>\n              <ListItemIcon>{0 % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={'Tik-Tok'} />\n            </ListItem>\n            </Link>\n          {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))} */}\n        </List>\n        \n      </Drawer>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from './menu'\nimport Box from '@material-ui/core/Box';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(0% - ${drawerWidth}px)`,\n    marginRight: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  link: {\n    color: 'black',\n    textDecoration: 'underline',\n  }\n}));\n\nexport default function PermanentDrawerRight() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Permanent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n        <Box fontFamily=\"Monospace\">Поиск в каждой социальной сети различается,     \n      так как каждое расследование уникально. Необходимым действием для корректного поиска и сбора информации является фиксация информации, она происходит различным способом. Один из самых распространнёных является MindMap, иначе говоря диаграмма связей или ассоциативная карта (метод структуризации концепций с использованием графической записи в виде диаграммы). Благодаря такому способу идёт наилучшее восприятие информации ей анализа на основе полученных и собранных сведений. Ниже приведён список наиболее популярных и удобный сервисов и программ для её осуществления.\n      </Box></Typography>\n         <Typography variant=\"h6\" gutterBottom>\n      Онлайн сервисы:\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://app.diagrams.net/\" className={classes.link}>Draw.io</a>, <a href=\"https://www.mindmup.com/\" className={classes.link}>MindMap</a>, <a href=\"https://www.wisemapping.com/\" className={classes.link}>Wisemapping</a>, <a href=\"https://www.mindmeister.com/ru\" className={classes.link}>Mindmeister</a>, <a href=\"https://www.mindomo.com\" className={classes.link}>Mindmomo</a>\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n      Приложения требующие скачивания:\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://www.xmind.net/\" className={classes.link}>Xmind</a>\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n      Расширения для браузера:\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://workspace.google.com/marketplace/app/mindmup_2_for_google_drive/758379822725\" className={classes.link}>Mindmup 2</a>\n        </Typography>\n\n       <Typography paragraph variant=\"h6\" gutterBottom style={{marginTop: '60px'}}>\n        Также уделите внимание используемым никнеймам и логинам изучаемой цели, они могут повторно использоваться в разных социальных сетях. Автоматизировать процесс проверки других социальных сетей на их использование можно с помощью:\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"go.mail.ru/search_social\" className={classes.link}>Сервис от mail.ru</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"instantusername.com\" className={classes.link}>Instantusername</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"whatsmyname.app\" className={classes.link}>Whatsmyname.app</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://namechk.com\" className={classes.link}>Namechk</a>\n        </Typography>\n\n        <Typography paragraph variant=\"h6\" gutterBottom style={{marginTop: '60px'}}>\n        рекомендуется найденные профили - либо добавлять в избранные, если такая функция есть в социальных сетях, либо совершать учёт id. Так как исследумые обект может менять - адрес страницы, имена, фамилии и имена, сведения о себе, в отличии от id. Ниже будет перечислен список сервисов для каждой социальной сети:\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://regvk.com/id/\" className={classes.link}>ВКонтакте</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://instaguru.online/kak-najti-id-polzovatelya-v-instagrame/\" className={classes.link}>Instagram</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://tweeterid.com\" className={classes.link}>Twitter</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://findmyfbid.com/\" className={classes.link}>Facebook</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://iklife.ru/socialnye-seti/odnoklassniki/kak-uznat-id-stranicy-v-odnoklassnikah.html\" className={classes.link}>Одноклассники</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://commentpicker.com/tiktok-id.php\" className={classes.link}>Tik-tok</a>\n        </Typography>\n\n        <Typography paragraph variant=\"h6\" gutterBottom style={{marginTop: '60px'}}>\n        Не стоит забывать про возможность попытки восстановления пароля во всех социальных сетях - она может дать частичный email-адресс и номер телефона. Email-адрес может быть также синхронизирован в социальных сетях на ряду с номером телефона, для дальнейшего отображения профиля в рекомендательных системах.\n        </Typography>\n\n        <Typography paragraph variant=\"h6\" gutterBottom style={{marginTop: '60px'}}>\n        Если у исследователя в наличии фото, качество которого затрудняет дальнейшее расслеодвание и изучени объекта. Есть вероятность его улучшить с помощью следующих сервисов:\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://letsenhance.io/\" className={classes.link}>Letsenhance</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://www.imgonline.com.ua/\" className={classes.link}>imgonline</a>\n        </Typography>\n        <Typography  gutterBottom>\n         <a href=\"https://www.myheritage.com/?lang=RU\" className={classes.link}>myheritage</a>\n        </Typography>\n\n        <Typography paragraph variant=\"h5\" gutterBottom style={{marginTop: '60px'}}>\n        В меню справа выберите социальную сеть, в которой вы хотите провести исследование для поиска информации, после чего вам отобразиться меню состоящее из пунктов, в зависимости от искомой информации. Последовательность необязательна.\n        </Typography>\n      </main>\n      <Menu/>\n    </div>\n  );\n}\n","import React from 'react';\nimport Tree from 'react-d3-tree';\nimport { useCenteredTree } from \"./helpers\";\nimport orgChartJson from \"./data/org-chart.json\";\n\n\n\nexport default function ProgramPage() {\n  const [translate, containerRef] = useCenteredTree();\n  return (\n    // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\n    <div id=\"treeWrapper\" style={{ width: '100%', height: '1200px' }}>\n      <div style={{fontSize: '20px',fontWeight: 'bold', marginTop: '30px', textAlign: 'center'}}>На данном дереве связей отображены наиболее популярые и функцинальные сервисы и возможности для поиска информации о человеке в социальных сетях, а также его фотографиях. \n        <br></br>\n        Под названием каждого сервиса, указан его URL-адресс.\n      </div>\n      <div style ={{fontSize: '16px', color: 'blue', marginTop: '30px', marginLeft: '25px'}}>\n        Дерево связей можно приближать и отдалять, а также исползовать перемещение.\n      </div>\n      <Tree data={orgChartJson} \n      translate={translate} \n      orientation=\"vertical\"\n      zoom = {0.6}/>\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\n\nexport const useCenteredTree = (defaultTranslate = { x: 1250, y: 150 }) => {\n  const [translate, setTranslate] = useState(defaultTranslate);\n  const containerRef = useCallback((containerElem) => {\n    if (containerElem !== null) {\n      const { width, height } = containerElem.getBoundingClientRect();\n      setTranslate({ x: width / 2, y: height / 2 });\n    }\n  }, []);\n  return [translate, containerRef];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Menu from './menu'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    width: '200px'\n  },\n  textCenter: {\n    maxWidth: '1000px'\n  }\n}));\n\nexport default function VK() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Поиск профиля\" {...a11yProps(0)} />\n        <Tab label=\"Получение информации\" {...a11yProps(1)} />\n        <Tab label=\"Получение метаинформации\" {...a11yProps(2)} />\n        {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\n        <Tab label=\"Item Five\" {...a11yProps(4)} />\n        <Tab label=\"Item Six\" {...a11yProps(5)} />\n        <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <div className={classes.textCenter}>\n      <Typography paragraph>\n        Для получения какой-либо информации о человеке, необходим материал с которым будет происходить работа.\n        </Typography>\n        <Typography paragraph>\n        В связи с этим сам поиск профиля/аккаунта человека можно осуществить следующими образами:\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n        1. Поиск по ФИО и дополнительной информации\n        \n        </Typography>\n        <Typography gutterBottom >\n        <img src=\"img/vk/1.png\" style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n         Данный интерфейс находиться по адресу <a href=\"vk.com/search\">vk.com/search.</a>\n         </Typography>\n        <Typography gutterBottom>\n          Граммотное использование имеющейся информации может сильно сузить круг, но при этом стоит учитывать, что владелец аккаунта может использовать аккаунт не под своим настоящем именем или искажать дополнительную информацию, с целью усложенения его поиска. Поэтому осуществление поиска различными комбинациями будет наиболее выигрышным вариантом\n        </Typography>\n\n        <Typography variant=\"h6\" gutterBottom>\n         2. Поиск через знакомых\n        </Typography>\n        <Typography gutterBottom>\n         Если есть информация о связи определённого человек с исследумым объектом, при условии, что информации о странице первого имеется, в отличии от второго. То для получения сведений о страницы одним из вариантов будет - изучить список друзей, комментарии под записями, отметки мне нравится, а также ответы на записи пользователя (http://vk.com/feed?obj=***&q=&section=mentions, где вместо *** указывается идентификатор каждого пользователя).\n        </Typography>\n        <Typography gutterBottom>\n         Также можно воспользоваться сервисом <a href=\"https://www.yasiv.com/vk\">yasiv.com/vk</a> для нахождения общих знакомых между двумя лицами, для опредленения исследуемого лица\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/2.png\"style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n         3. Поиск по фотографии\n        </Typography>\n        <Typography gutterBottom>\n        Если из информации, который распологает исследователь, есть только фотография, то ряд сервисов поможет найти страницу в этой социальной сети. А именно:\n        </Typography>\n        <Typography gutterBottom>\n         <a href=\"https://findclone.ru/\">1. Findclone</a> (наиболее релевантные ответы на запросы)\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/3.png\"style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n         <a href=\"https://search4faces.com/\">2. Search4faces</a>\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/4.png\"style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n        Также можно попробывать найти фотографию в Яндекс.Картинках или Google images, возможно автор изображения её уже публиковал и поисковые роботы просканировали её.\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n         4. Поиск по геолокации\n        </Typography>\n        <Typography gutterBottom>\n        Поиск по геолокации представляет собой единственный путь решения - использование сервисов отображения фотографий на карте. Сущесвтует вероятность найти искомы объект именно таким способом.\n        </Typography>\n        <Typography gutterBottom>\n        <a href=\"https://snradar.azurewebsites.net\">1. SnRadar</a>\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/5.png\"style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n        <a href=\"http://photo-map.ru/\">2. Photo-map</a>\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/6.png\"style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n         5. Поиск по номеру телефона\n         \n        </Typography>\n        <Typography gutterBottom>\n        Имея номер телефона найти пользователя, если он зарегестрирован не трудно, есть два варианта:\n        </Typography>\n        <Typography gutterBottom>\n        1.Добавить в телефонную книжку номер телефона, а затем импортировать контакты.\n\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/7.png\"style={{maxWidth: '700px'}}></img>\n\n        </Typography>\n        <Typography gutterBottom>\n        2. Открыть новый чат, после чего импортировать контакт.\n\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/8.png\"style={{maxWidth: '700px'}}></img>\n\n        </Typography>\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom>\n      В зависимости от типа профиля (открытый/закрытый) и зависит объем информации, который можно получить.\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/9.png\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n      Если профиль закрытый, то рекомендуется использовать легендирование для получения доступа к старнице, то есть под вымышленным предлогом запроситься в друзья.\n        </Typography>\n        <Typography gutterBottom>\n        Перед изучение профиля, исследователю необходимо понимать цель этого действия. Но для расширения имеющихся знаний, будем предполагать изучение всей страницы социальной сети.\n        </Typography>\n        <Typography gutterBottom>\n        1. Поэтому изучение начать стоит с фотографий, именно они могут сказать кто изображён на них, получить круг общения, места времяпрепровождения. Комментарии под ними также могут нести определённую информацию. Стоит обратить внимание, что к изображениям могут быть прикреплены геометки и хештеги, а также пользователи \"Вконтакте\".\n        </Typography>\n        <Typography gutterBottom>\n        2. После чего изучить необходимо сведения, которые оставил пользователь социальной сети - работа, место жительства, дата рождения. Записи на страницы также, как и фотографии могут нести - комментарии, лайки, геометки, хештеги и другие сведения.\n        </Typography>\n        <Typography gutterBottom>\n        3. Исследование списка друзей также несёт обязательно. Именно они могут сказать, где большинство близкого круга живёт, какой возраст. В списке друзей могут быть пометки \"родственник\", \"друг по школе\" и т.д.\n        </Typography>\n        <Typography gutterBottom>\n        4. Также часть комментариев оставленных в социальной сети могут быть получены способом описанно в пункте 2. \"Поиск профиля\"\n        </Typography>\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom >\n        1.Использование дополнительных сервисов сильно облегчает работу исследователя\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n          В случае, если страница малоифнормативна. То есть вероятность, что ранее пользователь её размщал. Поэтому есть три способа её получить:\n         </Typography>\n         <Typography gutterBottom>\n          а) Использование кешированной версии поисковыми системами Gooogle, Yandex и других с помощью поискового запроса : \"site:vk.com/ *\", либо \"inurl:vk.com/*\", где в первом варианте может быть указан как id, логин или имя и фимилия, а во втором только id или логин.\n         </Typography>\n        <Typography gutterBottom>\n          б) Сервис <a href=\"vk.com/search\">vk.watch</a> позволяет просмотреть на протяжении определённого времени, как выглядела страница, а также получить доступ ко всей информации(комментарии, друзья, заполненная информация) и фотографиям, которые были на тот момент.\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/vk/10.png\" style={{maxWidth: '700px'}}></img> \n        </Typography>\n        <Typography gutterBottom>\n          в) Использование сохранённой версии страницы в <a href=\"https://web.archive.org\">Waybackmachine </a>, где в строку поиска ввести url адрес страницы.\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n          Также дополнительно может быть получена информации\n         </Typography>\n         <Typography gutterBottom >\n          О врмени проведённом в социальной сети, таким образом можно сказать когда человек спит/бодрствует и когда у него свободное время.\n         </Typography>\n         <Typography gutterBottom >\n          Для этого можно использовать <a href=\"http://vk.city4me.com\">City4me </a> и <a href=\"https://220vk.com\">220vk</a>\n         </Typography>\n         <Typography gutterBottom>\n        <img src=\"img/vk/11.png\" style={{maxWidth: '700px'}}></img> \n        </Typography>\n         <Typography gutterBottom >\n          Эти же сервисы демонстрируют также ряд полезных функций для исследователя, среди которых: поиск скрытых друзей и групп, просмотр оставленных комментариев и записи, которые были отмечены лайком. А также анализ друзей пользователя на город проживания и даты рождения.\n         </Typography>\n         <Typography gutterBottom >\n          В определённых ситуациях может понадобиться установить взаимосвязь между двумя людьми, для этого также пригодиться указанный в параграфе \"Поиск профиля\" <a href=\"https://yasiv.com/vk\">yasiv</a> и <a href=\"https://220vk.com\">220vk</a>\n         </Typography>\n         <Typography gutterBottom variant=\"h6\">\n          Важным действием является - обратить внимание на логин/никнейм пользователя, указанный на странице. Так как он может быть использован в других социальных сетях или на других ресурсах.\n         </Typography>\n      </div>\n      </TabPanel>\n      {/* <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel> */}\n      <Menu/>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Menu from './menu'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    width: '200px'\n  },\n  textCenter: {\n    maxWidth: '1000px'\n  }\n}));\n\nexport default function OK() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Поиск профиля\" {...a11yProps(0)} />\n        <Tab label=\"Получение информации\" {...a11yProps(1)} />\n        <Tab label=\"Получение метаинформации\" {...a11yProps(2)} />\n        {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\n        <Tab label=\"Item Five\" {...a11yProps(4)} />\n        <Tab label=\"Item Six\" {...a11yProps(5)} />\n        <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <div className={classes.textCenter}>\n      \n        <Typography paragraph>\n        Поиск в Одноклассниках может быть сведён 4 вариантам\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n        1. Поиск по ФИО и дополнительной информации, имеющейся у исследователя\n        \n        </Typography>\n        <Typography gutterBottom >\n        <img src=\"img/ok/1.png\" style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n         Данный интерфейс находиться при переходе в графу поиска в верхнем меню социальной сети\n         </Typography>\n        <Typography gutterBottom>\n          Фильтрация людей, схожа с социальной сетью ВКонтакте.\n        </Typography>\n\n        <Typography variant=\"h6\" gutterBottom>\n        2. Поиск по фотографии\n        </Typography>\n        <Typography gutterBottom>\n        Поиск по фотографии с лицом, исследумой цели в социальной сети Одноклассники, осуществляет только <a href=\"https://search4faces.com/\">Search4faces</a>\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/ok/2.png\"style={{maxWidth: '700px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n        Также можно попробывать найти фотографию в Яндекс.Картинках или Google images, возможно автор изображения её уже публиковал и поисковые роботы просканировали её.\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n         \n         5. Поиск по номеру телефона\n         \n        </Typography>\n        <Typography gutterBottom>\n        Имея номер телефона найти пользователя и воспользоваться функцией поиска друзей. \n        </Typography>\n        <Typography gutterBottom>\n        1.Добавить в телефонную книжку номер телефона, а затем импортировать контакты. Также данный человек может отобразиться в \"возможных друзьях\"\n\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/ok/3.png\"style={{maxWidth: '700px'}}></img>\n\n        </Typography>\n        \n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div className={classes.textCenter}>\n\n      <Typography gutterBottom>\n      Профиль в Одноклассниках может быть закрыт на платной основе, а значит данной функцией пользуется небольшое колличество людей, что является положительным фактором при поиске информации.\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/ok/4.png\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n      В случае, если профиль закрытый, то рекомендуется использовать легендирование для получения доступа к старнице, то есть под вымышленным предлогом запроситься в друзья.\n        </Typography>\n        <Typography gutterBottom>\n        Перед изучение профиля, исследователю необходимо понимать цель этого действия. Но для расширения имеющихся знаний, будем предполагать изучение всей страницы социальной сети.\n        </Typography>\n        <Typography gutterBottom>\n        1. Поэтому изучение начать стоит с фотографий, именно они могут сказать кто изображён на них, получить круг общения, места времяпрепровождения. Комментарии под ними также могут нести определённую информацию. Стоит обратить внимание, что к изображениям могут быть прикреплены геометки и хештеги, а также пользователи \"Одноклассники\".\n        </Typography>\n        <Typography gutterBottom>\n        2. После чего изучить необходимо сведения, которые оставил пользователь социальной сети - работа, место жительства, дата рождения. Группы и события на которые подписан владелец страницы Записи на страницы также, как и фотографии могут нести - комментарии, лайки, геометки, хештеги и другие сведения.\n        </Typography>\n        <Typography gutterBottom>\n        3. Исследование списка друзей также несёт обязательный характер. Именно они могут сказать, где большинство близкого круга живёт, какой возраст. Список друзей может иметь категории, которые определил владелец страницы \"родственники\", \"друзья по школе\" и т.д.\n        </Typography>\n        \n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom >\n        Использование дополнительных сервисов сильно облегчает работу исследователя\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n          В случае, если страница малоифнормативна. То есть вероятность, что ранее пользователь её размещал. Поэтому есть два способа её получить:\n         </Typography>\n         <Typography gutterBottom>\n          а) Использование кешированной версии поисковыми системами Gooogle, Yandex и других с помощью поискового запроса : \"site:ok.com/ *\", либо \"inurl:ok.com/*\", где в первом варианте может быть указан как id, логин или имя и фамилия, а во втором только id или логин.\n         </Typography>\n            <Typography gutterBottom>\n          б) Использование сохранённой версии страницы в <a href=\"https://web.archive.org\">Waybackmachine </a>, где в строку поиска ввести url адрес страницы.\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/ok/5.png\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n          Также дополнительно может быть получена информации\n         </Typography>\n         <Typography gutterBottom >\n          О врмени проведённом в социальной сети, таким образом можно сказать когда человек спит/бодрствует и когда у него свободное время.\n         </Typography>\n         <Typography gutterBottom >\n          Для этого можно использовать <a href=\"http://vk.city4me.com\">City4me</a> и <a href=\"https://220vk.com\">220vk</a>\n         </Typography>\n         <Typography gutterBottom>\n        <img src=\"img/ok/6.png\" style={{maxWidth: '700px'}}></img> \n        </Typography>\n         <Typography gutterBottom >\n          Исследователь может получить, скачать, проанализировать и сравнить списки друзей с помощью сервисов  <a href=\"https://vk.barkov.net/\">barkov.net</a> и <a href=\"https://parser-ok.com\">parser-ok</a>\n         </Typography>\n         <Typography gutterBottom >\n          В остальном исследователю необходимо использовать дличный поиск и анализ.\n         </Typography>\n         \n      </div>\n      </TabPanel>\n      {/* <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel> */}\n      <Menu/>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Menu from './menu'\nimport Button from '@material-ui/core/Button';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    width: '200px'\n  },\n  textCenter: {\n    maxWidth: '1000px'\n  }\n}));\n\nexport default function Facebook() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Поиск профиля\" {...a11yProps(0)} />\n        <Tab label=\"Получение информации\" {...a11yProps(1)} />\n        \n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom variant=\"h6\">\n          Найти интересующий нас профиль в Facebook можно несколькими путями:\n         </Typography>\n         <Typography gutterBottom >\n          1. Использовать поисковые системы.\n         </Typography>\n         <Typography gutterBottom >\n          {/* Для этого можно использовать <a href=\"http://vk.city4me.com\">City4me </a> и <a href=\"https://220vk.com\">220vk</a> */}\n          С помощью поисковых операторов \"site:facebook.com *\" или \"inurl:facebook.com/ ***\", где вместо *** указывается фамилия и имя, либо никнейм. В ряде случаев любая известная информация, позволяющая провести идентификацию (в т.ч. моб. телефон).\n           </Typography>\n           <Typography gutterBottom >\n          2. Использовать русифицированую и дополненную программу автором информационно-справочной системы, основанной на графах связи и поиску по Facebook. <Button color=\"primary\" size=\"lg\" onClick={() => window.location.href=\"/programFB/programFB.html\"}>Тут находится сама программа</Button>\n         </Typography>\n         <Typography gutterBottom >\n          3. Использовать встроенный в социальную сеть поиск людей, ипользуя фильтры на основе имеющейся информации\n         </Typography>\n         <Typography gutterBottom>\n        <img src=\"img/fb/1.png\" style={{maxWidth: '700px', maxHeight: '400px'}}></img> \n        </Typography>\n        <Typography gutterBottom >\n          4. Поиск по фотографии. Данный способ может некорректно отрабатываться по причине защиты фотографий пользователей от алгоритмов поиска и анализа. Но в ряде случаев сервис <a href=\"https://pimeyes.com/en\">PimEye</a> может показать релевантный ответ на запрос. Также не стоит принебрегать поисковыми системами Google, Yandex, Mail, Bing.\n         </Typography>\n         <Typography gutterBottom>\n        5. При наличии номера абонента можно синхронизировать контакты мобильного телефона и Facebook, таким образом в рекомендациях в друзья, появится профиль человека привязанный к нему. Инструкцию можно прочитать на <a href=\"https://ru-ru.facebook.com/help/355489824655936\">официальном сайте</a>\n        </Typography>\n         </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom>\n      Колличество информации, которую может оставить пользователь на своей страницы огромно. Ниже приведена схема, показывающее максимальный обхъем всех видов данных. \n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/fb/2.png\" style={{maxWidth: '700px', maxHeight: '700px'}}></img> \n        </Typography>\n        <Typography gutterBottom>\n      В случае, если профиль закрытый, то рекомендуется использовать легендирование для получения доступа к старнице, то есть под вымышленным предлогом запроситься в друзья.\n        </Typography>\n        <Typography gutterBottom>\n        Перед изучение профиля, исследователю необходимо понимать цель этого действия. Но для расширения имеющихся знаний, будем предполагать изучение всей страницы социальной сети.\n        </Typography>\n        <Typography gutterBottom>\n        1. Поэтому изучение начать стоит с фотографий, именно они могут сказать кто изображён на них, получить круг общения, места времяпрепровождения. Комментарии под ними также могут нести определённую информацию. Стоит обратить внимание, что к изображениям могут быть прикреплены геометки и хештеги, а также отмечены пользователи \"Facebook\".\n        </Typography>\n        <Typography gutterBottom>\n        2. После чего изучить необходимо сведения, которые оставил пользователь социальной сети - работа, место жительства, дата рождения, образование. Группы и события на которые подписан владелец страницы, записи на страницы. Помимо этого - сама социальная сеть позволяет просмотреть оставленные \"лайки\" пользоваталем.\n        <Typography gutterBottom>\n        <img src=\"img/fb/3.png\" style={{maxWidth: '700px', maxHeight: '700px'}}></img> \n        </Typography>\n        </Typography>\n        <Typography gutterBottom>\n        3. Исследование списка друзей также несёт обязательный характер. Именно они могут сказать, где большинство близкого круга живёт, какой возраст. Список друзей может иметь категории, которые определил владелец страницы \"родственники\", \"друзья по школе\" и т.д., в том числе и \"недавно добавленные\"\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n        4. В случае, если страница малоифнормативна. То есть вероятность, что ранее пользователь её размщал. Поэтому есть два способа её получить:\n         </Typography>\n         <Typography gutterBottom>\n          а) Использование кешированной версии поисковыми системами Gooogle, Yandex и других с помощью поискового запроса : \"site:facebook.com/ *\", либо \"inurl:facebook.com/*\", где в первом варианте может быть указан как id, логин или имя и фамилия, а во втором только id или логин.\n         </Typography>\n            <Typography gutterBottom>\n          б) Использование сохранённой версии страницы в <a href=\"https://web.archive.org\">Waybackmachine </a>, где в строку поиска ввести url адрес страницы.\n        </Typography>\n      </div>\n      </TabPanel>\n      \n      <Menu/>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Menu from './menu'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    width: '200px'\n  },\n  textCenter: {\n    maxWidth: '1000px'\n  }\n}));\n\nexport default function Instagram() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Поиск профиля\" {...a11yProps(0)} />\n        <Tab label=\"Получение информации\" {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <div className={classes.textCenter}>\n      \n        <Typography paragraph>\n        Поиск изучаемого в Instagram пользователя, может быть сведён к следующим способам:\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n        1. Поиск c помощью поисковых систем. \n        \n        </Typography>\n        <Typography gutterBottom>\n        \n        Профиль нужного пользователя можно найти с помощью поисковых операторов применённых в Google, Yandex и других поисковых системах.\n        </Typography>\n        <Typography gutterBottom >\n        Для этого необходимо ввести \"site:instagram.com/ **\" или \"*inurl:instagram.com **\", где вместо ** - указывается имя и фамилия, либо никнейм.\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n        2. Поиск пользователей по геолокации.\n         </Typography>\n        <Typography gutterBottom>\n        Социальная сеть Instagram позволяет оставлять геометки на своих фотографиях, благодаря чему появляется возможность совершать обратный поиск. Для этого существует несколько вариантов.\n\t\t\n\n        </Typography>\n        <Typography gutterBottom >\n        2.1. Через мобильное приложение зайти в поиск, затем нажать места и ввести адрес или интересующее нас место, после чего анализом выбрать нужные нам фотографии и пользователей. Аналогичная возможность присутствует в браузере.\n        </Typography>\n        <Typography gutterBottom >\n        2.2. Воспользоваться сторонним сервисом поиска по геолокации. <a href=\"https://www.osintcombine.com/instagram-explorer\">Osintcombine</a> имеет схожий функционал с мобильной версией поиска, но позволяет удобно искать в веб-версии\n        </Typography>\n\n        <Typography variant=\"h6\" gutterBottom>\n        3. Поиск пользователя по разделу «о себе». \n        </Typography>\n        <Typography gutterBottom>\n        Разработчики не предусмотрели данную функцию, в связи с чем от сторонних производителей ПО, появился сервис  <a href=\"https://www.searchmy.bio\">Searchmy.bio</a>, позволяющий искать профили людей по той информации, которую они оставили в разделе “О себе”.\n        \n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/ig/1.png\"style={{maxWidth: '600px'}}></img>\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n        4. Использование внутреннего поиска приложения\n        </Typography>\n        <Typography gutterBottom>\n       В самом приложении можно осуществить поиск либо по никнейму, либо по имени и фамилии, но данный способ не всегда релевантный.\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n         \n         5. Поиск по номеру телефона\n         \n        </Typography>\n        <Typography gutterBottom>\n        Имея номер телефона найти пользователя и воспользоваться функцией синхронизации контактов. \n        </Typography>\n        <Typography gutterBottom>\n        Добавить в телефонную книжку номер телефона, а затем импортировать контакты. Также данный человек может отобразиться в \"возможно знакомых\"\n\n        </Typography>\n       \n        \n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div className={classes.textCenter}>\n\n      <Typography gutterBottom>\n      Так как социальная сеть Instagram предназначена для обмена фотографиями и короткими роликами, то именно эта информация вероятнее всего будет интересовать исследователя. Невзирая на это, можно получить ряд дополнительных сведений указанных на изображении\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/ig/2.png\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n      В случае, если профиль закрытый, то рекомендуется использовать легендирование для получения доступа к старнице, то есть под вымышленным предлогом запроситься в друзья.\n        </Typography>\n        <Typography gutterBottom>\n        Перед изучение профиля, исследователю необходимо понимать цель этого действия. Но для расширения имеющихся знаний, будем предполагать изучение всей страницы социальной сети.\n        </Typography>\n        <Typography gutterBottom>\n        Поэтому изучение начать стоит с фотографий, именно они могут сказать кто изображён на них, получить круг общения, места времяпрепровождения. Комментарии под ними также могут нести определённую информацию. Стоит обратить внимание, что к изображениям могут быть прикреплены геометки и хештеги, а также отмечены другие пользователи социальной сети.\n        </Typography>\n        <Typography gutterBottom>\n        Скачать фотографии в максимально возможно качестве, в том числе аватар профиля можно с помощью сервисов <a href=\"https://gramtools.ru)\">gramotool</a>, <a href=\"https://www.instadp.com\">Instadp</a>, <a href=\"imginn.com\">Imginn</a>\n        </Typography>\n        <Typography gutterBottom>\n        Помимо ранее сказанного сервиса поиска фотографий на карте также есть аналогичный - <a href=\"https://instmap.com/\">instmap</a> \n        </Typography>\n        <Typography gutterBottom>\n        Исследование списка подписчиков и подписок также несёт обязательный характер. Именно они могут сказать, где большинство близкого круга живёт, какой их возраст возраст, чем интересуется пользователей, с кем знаком, его увлечения.\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n          В случае, если страница малоифнормативна. То есть вероятность, что ранее пользователь имел статус профиля \"открытый\" или информация в профиле была изменена. Поэтому есть два способа получить ранее указанную информацию:\n         </Typography>\n         <Typography gutterBottom>\n          а) Использование кешированной версии поисковыми системами Gooogle, Yandex и других с помощью поискового запроса : \"site:instagram.com/ *\", либо \"inurl:instagram.com/*\", где в первом варианте может быть указан как id, логин или имя и фамилия, а во втором только id или логин.\n         </Typography>\n            <Typography gutterBottom>\n          б) Использование сохранённой версии страницы в <a href=\"https://web.archive.org\">Waybackmachine </a>, где в строку поиска ввести url адрес страницы.\n        </Typography>\n        \n        </div>\n      </TabPanel>\n      \n      <Menu/>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Menu from './menu'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    width: '200px'\n  },\n  textCenter: {\n    maxWidth: '1000px'\n  }\n}));\n\nexport default function TikTok() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Поиск профиля\" {...a11yProps(0)} />\n        <Tab label=\"Получение информации\" {...a11yProps(1)} />\n      \n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <div className={classes.textCenter}>\n      \n        <Typography paragraph>\n        Поиск в Tik-Tok\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n        Чаще всего профиль Tik-Tok указан в других социальных сетях, так как, если автор является активным её пользователем, то он заинтересован в привлечении новых подписчиков.\n        \n        </Typography>\n        <Typography gutterBottom>\n        В обратном случае, профиль можно найти как из самой социальной сети по имени и фамилии, либо никнейму.\n         </Typography>\n         <Typography gutterBottom variant=\"h6\">\n        Первый вариант это использовать поиск в самой социальной сети:\n         </Typography>\n        <Typography gutterBottom >\n        <img src=\"img/tt/1.jpg\" style={{maxWidth: '700px'}}></img>\n        </Typography>\n       \n\n        <Typography variant=\"h6\" gutterBottom>\n        Второй вариант использовать поисковые системы, фильтруя поиск поисковыми операторами\n        </Typography>\n        <Typography gutterBottom>\n        \"inurl:https://m.tiktok.com/h5/share/usr filetype:html ***\" - данный вариант позволяет перебирать множество вариантов профилей, и не только по никнейму, а по сопутствующей информации в профиле\n        </Typography>\n        <Typography gutterBottom>\n        аналогичным можно считать запрос \"site:https://m.tiktok.com ***\", позволяет найти профиль методом перебора, если точное имя пользователя неизвестно, то есть необходимо указать вместо «***» - предполагаемый никнейм или имя и фамилию\n        </Typography>\n       \n        <Typography variant=\"h6\" gutterBottom>\n         Третим вариантов можно считать поиск по дополнительной информации, если есть фотографии с человеком, то воспользоваться поиском по картинкам от Яндекс или Google. Либо исследумые объект в других социальных сетях указывал свой персональный хештег, что также может его идентифицировать.\n         \n        </Typography >\n        <Typography gutterBottom variant=\"h6\">\n        Четвёртый вариант - поиск по номеру телефону с помощью функции синхронизации контактов. \n        </Typography>\n        <Typography gutterBottom>\n        После синхронизации контактов, как указано на изображении снизу. Профиль зарегестрированный на номер телефона в записной книжке телефона будет отображён со временем во вкладке \"Интересное\"\n\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/tt/3.jpg\"style={{maxWidth: '700px'}}></img>\n\n        </Typography>\n        \n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div className={classes.textCenter}>\n\n      <Typography gutterBottom>\n      Профиль в Tik-Tok может быть закрыт, но в случае его открытости и наличия видео можно получить множество информации.\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/tt/4.png\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n        Перед изучение профиля, исследователю необходимо понимать цель этого действия. Но для расширения имеющихся знаний, будем предполагать изучение всего профиля социальной сети.\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n        1. Поэтому изучение начать стоит с информации, которая закреплена в профиле - это может номер телефона, никнейм, другие социальные сети и лююая другая дополнительная информация\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n        2. После чего изучить необходимо видеоролики, которые опубликовал исследуемый объект, если таковые имеются.\n        </Typography>\n        <Typography gutterBottom>\n        Они могут содержать информацию о круге общения, месте жительсвте, увлечениях и другой информации, которую автор ролика оставил неумышленно.\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n        3. Изучение, понравившегося контента.\n        </Typography>\n        <Typography gutterBottom>\n        Данная возможность можеть быть скрыта владельцем профиле, но в ином случае мы можем получить ряд интересов пользователя\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/tt/2.jpg\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n         4. Использовать заархивированные страницы профилей.\n         </Typography>\n         <Typography gutterBottom>\n          а) Использование сохранённой версии поисковых систем Google, Яндекс, Mail.ru и других. Для начала найдя ссылку в поисковой системе с помощью запросов рассмотренных главе поиска профилей\n        </Typography>\n            <Typography gutterBottom>\n          б) Использование сохранённой версии страницы в <a href=\"https://web.archive.org\">Waybackmachine </a>, где в строку поиска ввести url адрес страницы.\n        </Typography>\n        \n        </div>\n      </TabPanel>\n      \n     \n      <Menu/>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Menu from './menu'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    width: '200px'\n  },\n  textCenter: {\n    maxWidth: '1000px'\n  }\n}));\n\nexport default function Twitter() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Поиск профиля\" {...a11yProps(0)} />\n        <Tab label=\"Получение информации\" {...a11yProps(1)} />\n        <Tab label=\"Получение метаинформации\" {...a11yProps(2)} />\n        {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\n        <Tab label=\"Item Five\" {...a11yProps(4)} />\n        <Tab label=\"Item Six\" {...a11yProps(5)} />\n        <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n      <div className={classes.textCenter}>\n      <Typography paragraph>\n        Для получения какой-либо информации о человеке, необходим материал с которым будет происходить работа.\n        </Typography>\n        <Typography paragraph>\n        В связи с этим сам поиск профиля/аккаунта человека можно осуществить следующими образами:\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n        1. Поиск с помощью предусмотренной разработчиками функцией на <a href=\"https://twitter.com/explore\">главной странице </a> по имеющимся данным(фамилия и имя, никнейм)\n        \n        </Typography>\n        <Typography gutterBottom >\n        <img src=\"img/tw/1.png\" style={{maxWidth: '500px', maxHeight: '500px'}}></img>\n        </Typography>\n        <Typography gutterBottom variant=\"h6\">\n         2. <a href=\"https://twitter.com/search-advanced\">Расширенный поиск в Twitter</a>. Имеет большой функционал, позволяет выполнять поиск определенных людей, их сообщений и ответов, также ключевых слов, хэштегов и имеет сортировку по дате. Проблема здесь заключается в том, что поиск сообщения часто ограничивается предыдущими семью - десятью днями. \n         </Typography>\n         <Typography gutterBottom >\n        <img src=\"img/tw/1.png\" style={{maxWidth: '500px', maxHeight: '500px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n          Граммотное использование имеющейся информации может сильно сузить круг, но при этом стоит учитывать, что владелец аккаунта может использовать аккаунт не под своим настоящем именем или искажать дополнительную информацию, с целью усложенения его поиска. Поэтому осуществление поиска различными комбинациями будет наиболее выигрышным вариантом\n        </Typography>\n\n        <Typography variant=\"h6\" gutterBottom>\n         3. Поиск c помощью  <a href=\"https://twitter.com/i/directory/profiles\">каталога Twitter</a>\n        </Typography>\n        <Typography gutterBottom>\n        Это база данных пользователей, позволяющая находить человека по имени и фамилии (никнейму). Полезна при поиске заранее известного имени, где изначально при регистрации пользователям была совершена грамматическая или орфографическая ошибка.\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n         4. Поиск с помощью операторов в поисковых системах.\n        </Typography>\n        <Typography gutterBottom>\n        Если из информации, который распологает исследователь, есть только набор разрозненных данных, то можно комбинировав их найти профиль исследумой цели.\n        </Typography>\n        <Typography gutterBottom>\n         \"site: twitter.com/ ***\", где вместо *** подставляем имеющиеся сведения (часть возможного никнейма, город и имя и т.д.)\n        </Typography>\n        \n        \n        \n       \n        <Typography gutterBottom variant=\"h6\">\n        5. Поиск по номеру телефона сводиться к синхронизации контактов с социальной сетью.\n\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/tw/3.png\"style={{maxWidth: '500px', maxHeight: '500px'}}></img>\n\n        </Typography>\n       \n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom>\n      В профиле Twitter может находиться различная информация о пользователе, которую он сам указал. Но помимо этого, существует сервисы, которые значительно упрощают поиск и расширают границы ручного сбора и поиска сведений, которые указаны на изображении\n        </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/tw/4.png\"style={{maxWidth: '700px', maxHeight: '770px'}}></img>\n        </Typography>\n        <Typography gutterBottom>\n     \n        </Typography>\n        <Typography gutterBottom>\n        1. Сервис <a href=\"followerwonk.com\">Followerwonk</a>\n        </Typography>\n        <Typography gutterBottom>\n        Данный сервис работает только с открытыми профилями и после авторизации, позволяет проанализировать подписчиков пользователя. Также сервис позволяет искать пользователей одновременно или по раздельности категорируя на: города, фамилии и имена, никнеймы, количество подписчиков, сообщений, ключевым словам.\nЕщё наиболее полезная опция — это анализ общих подписчиков и подписок пользователей, что наиболее верно может установить связь между людьми и ответит на вопросы - если ли у них общие знакомые, друзья.\n        </Typography>\n        <Typography gutterBottom>\n        2. Сервис <a href=\"https://spoonbill.io\">Spoonbill</a>\n        </Typography>\n        <Typography gutterBottom>\n        Пользователи Twitter в процессе своего времяпрепровождения в сети, могут менять не только свой никнейм, но и другую информацию - свои твиты, геолокацию, свои посты, информацию о себе. Именно это и покажет данный сервис по временным отрезкам.\nДля просмотра информации стоит перейти по url-адресу: spoonbill.io/twitter/data/*, где * — это никнейм исследуемой цели.\n        </Typography>\n        <Typography gutterBottom>\n        3.  <a href=\"http://mapd.csail.mit.edu/tweetmap/\">MapD: MIT</a>\n        </Typography>\n        <Typography gutterBottom>\n        MapD - это платформа баз данных, которая может выполнять поиск по хештегу, имени пользователя или геопозиции твитов. Также можно комбинировать все три варианта для детального поиска.\n        </Typography>\n        <Typography gutterBottom>\n        4. <a href=\"http://twitonomy.com\">Twitonomy</a> и <a href=\"http://foller.me/tweetmap/\">FollerMe</a>\n        </Typography>\n        <Typography gutterBottom>\n        Сервисы, предназначенные для более детальной аналитики профиля.\nПозволяют проанализировать следующие категории: с каких устройств пользователь оставляет твиты, кто подписан(их статистика), какие хештеги наиболее часто используются, каким пользователям чаще отвечает исследуемый объект, в какое время и по каким дням совершается опубликование сообщений, а также количество ответов, отметок «мне нравиться», ретивтов и другой сопутствующей информации, в том числе время возможного сна пользователя.\n        </Typography>\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div className={classes.textCenter}>\n      <Typography gutterBottom variant=\"h6\">\n        Дополнительно расширить и собрать в удобном виде для анализа информации могут следующие сервисы:\n        </Typography>\n        <Typography gutterBottom >\n          1. <a href=\"socialrank.com/firstfollower\">Socialrank</a>\n         </Typography>\n         <Typography gutterBottom>\n         Данный сервис показывает первого подписавшегося на аккаунт исследуемой цели, что вероятнее всего данный пользователь близок исследуемому объекту.\n         </Typography>\n         <Typography gutterBottom >\n          2. <a href=\"https://tweetbeaver.com\">TweetBeaver</a> - многофункциональный сервис создания отчётов о пользователях Twitter\n         </Typography>\n         <Typography gutterBottom>\n         Включает в себя 14 функций: конвертация никнейма и обратное действие, проверка, подписаны ли две учётным записи друг на друга как следует из названия, просмотр или скачивание понравившихся записей исследуемому объекту, поиск, по ключевым словам, в понравившихся записях, загрузка сообщений пользователя, поиск по временной шкале сообщений пользователя, получение данныз об учётной записи пользователя, получение информации о друзьях и подписчиках пользователя, поиск общих подписчиков и друзей, поиск ретвтов двух пользователей\n         </Typography>\n        <Typography gutterBottom>\n        <img src=\"img/tw/5.png\" style={{maxWidth: '600px'}}></img> \n        </Typography>\n        <Typography gutterBottom >\n          3. <a href=\"https://onemilliontweetmap.com\">One Million Tweet Map</a>\n         </Typography>\n         <Typography gutterBottom>\n         Этот сервис отображает только один миллион последних сообщений на мировой карте. Но твиты постоянно обновляются, и могут не дать нам времени полностью проанализировать информацию.счиках пользователя, поиск общих подписчиков и друзей, поиск ретвтов двух пользователей\n         </Typography>\n         <Typography gutterBottom >\n          4. <a href=\"https://tweetdeck.com\">Tweet Deck</a>\n         </Typography>\n         <Typography gutterBottom>\n         Сервис Tweet Deck принадлежит Twitter, и он позволяет по заданным параметрам и категориям отфильтровать информацию, для дальнейшего анализа за счёт точного расширенного поиска с большим рядом функций, в отличий от стандартного. \nОдин из наиболее очевидных сценариев использования Tweetdeck в разрезе OSINT — снижение уровня шума в рабочей выборке твитов.\n         </Typography>\n         <Typography gutterBottom variant=\"h6\">\n        Помимо этого, сущесвтуют и поисковые запросы в самом Twitter.\n        </Typography>\n        <Typography gutterBottom >\n          Они могут как найти твиты в определённом местоположении, так и отфильтровать ответы на твиты человека. Вводить их необходимо в поисковой строке Twitter\n         </Typography>\n         <Typography gutterBottom>\n         Поиск местоположения - \"geocode:59.844927, 30.138262,1km\". Тут вводятся координаты точки без пробелов, а также радиус области (в километрах)\n         </Typography>\n         <Typography gutterBottom>\n         Поиск по диапазону дат. Расширенный поиск Twitter ограничивает в поиске по дате, и позволяет включить фильтр только от определённой даты. Для того чтобы произвести более конкретный запрос необходимо указать оператор поиска «since:» (это «с») и «until:» («это до») и поставить после каждого дату. Пример: «since:2021-01-01 until:2021-01-21». Для поиска с использование ключевых слов, их необходимо добавить в кавычки после пробела.\n         </Typography>\n         <Typography gutterBottom>\n         \n         Необходимо отметить, что вместо ключевых слов можно указать имя исследуемого объекта. Это может помочь в случае, если у искомой цели множество тысяч сообщений. Для этого необходимо в поиске использовать помимо операторов даты, оператор «from». К примеру: «from:elonmusk since:2021-01-01 until:2021-01-30», это отобразит сообщения Илона Маска от первого января 2021 года до 30 января 2021 года. А также может быть применено ключевое слово без кавычек как в ранее указанном примере. Пример: «from:elonmusk next since:2021-01-01 until:2021-01-30», в данном случае вышесказанный запрос отфильтрует сообщения с ключевым словом «next».\n         </Typography>\n         <Typography gutterBottom variant=\"h6\">\n          В случае, если страница малоифнормативна. То есть вероятность, что ранее пользователь её размщал. Поэтому есть два способа её получить:\n         </Typography>\n         <Typography gutterBottom>\n          а) Использование кешированной версии поисковыми системами Gooogle, Yandex и других с помощью поискового запроса : \"site:twitter.com/ *\", либо \"inurl:twitter.com/*\", где в первом варианте может быть указан как id, логин или имя и фамилия, а во втором только id или логин.\n         </Typography>\n            <Typography gutterBottom>\n          б) Использование сохранённой версии страницы в <a href=\"https://web.archive.org\">Waybackmachine </a>, где в строку поиска ввести url адрес страницы.\n        </Typography>\n\n      </div>\n      </TabPanel>\n      {/* <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel> */}\n      <Menu/>\n    </div>\n  );\n}\n\n\n","import './App.css';\nimport {StartTopMenu} from './StartPage'\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FirstPage from './FirstPage';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport PreparationPage from './PreparationPage/PreparationPage';\nimport SecondPage from './SecondPage/SecondPage';\nimport ProgramPage from './ProgramPage/ProgramPage';\nimport VK from './SecondPage/VK';\nimport OK from './SecondPage/OK';\nimport Facebook from './SecondPage/Facebook';\nimport Instagram from './SecondPage/Instagram';\nimport TikTok from './SecondPage/TikTok';\nimport Twitter from './SecondPage/Twitter';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  cards: {\n    \n\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Router>\n    <div className={classes.root}>\n    <StartTopMenu/>\n    {/* <FirstPage/> */}\n    <Route>\n    <Route exact path=\"/\"  component={FirstPage}/>\n    <Route exact path=\"/preparation\" render={()=><PreparationPage url={'/preparation'}/>} component={PreparationPage}/>\n    <Route exact path=\"/program-pages\" render={()=><PreparationPage url={'/program-pages'}/>} component={ProgramPage}/>\n    <Route exact path=\"/search-page\" render={()=><PreparationPage url={'/search-page'}/>} component={SecondPage}/>\n    <Route exact path=\"/search-page/vk\" render={()=><VK url={'/program-pages/vk'}/>} component={VK}/>\n    <Route exact path=\"/search-page/ok\" render={()=><OK url={'/program-pages/ok'}/>} component={OK}/>\n    <Route exact path=\"/search-page/Facebook\" render={()=><Facebook url={'/program-pages/Facebook'}/>} component={Facebook}/>\n    <Route exact path=\"/search-page/Twitter\" render={()=><Twitter url={'/program-pages/Twitter'}/>} component={Twitter}/>\n    <Route exact path=\"/search-page/Instagram\" render={()=><Instagram url={'/program-pages/Instagram'}/>} component={Instagram}/>\n    <Route exact path=\"/search-page/TikTok\" render={()=><TikTok url={'/program-pages/TikTok'}/>} component={TikTok}/>\n   \n\n\n\n\n    </Route>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}